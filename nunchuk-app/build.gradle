apply from: '../configs/dependencies.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildToolsVersion
    ndkVersion '21.0.6113669'

    buildFeatures {
        viewBinding true
        compose true
    }

    defaultConfig {
        applicationId "io.nunchuk.android"
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode androidConfig.versionCode
        versionName androidConfig.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        ndk {
            //abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
            abiFilters 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["room.incremental"] = "true"
            }
        }

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("${project.rootDir}/nunchuk-keystore.jks")
            storePassword "Nunchuk@2022"
            keyAlias "nunchuk-android"
            keyPassword "Nunchuk@2022"
        }
        debug {
            storeFile file("${project.rootDir}/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            versionNameSuffix androidConfig.taskLabel
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled true
            debuggable false
            multiDexKeepFile file('multidex-config.txt')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.conf'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "env"
    productFlavors {
        production {
            applicationId "io.nunchuk.android"
            firebaseAppDistribution {
                appId = "1:712097058578:android:6ba4711f048801f813edcb"
                releaseNotesFile = "nunchuk-app/release_notes.txt"
                testers = "hung.tran@nunchuk.io"
                groups = "testers"
            }
            dimension "env"
            resValue "string", "app_name", "Nunchuk"
        }
        development {
            applicationId "com.nunchuk.android.dev"
            firebaseAppDistribution {
                appId = "1:712097058578:android:3a7fe0dc4e6b89b713edcb"
                releaseNotesFile = "nunchuk-app/release_notes.txt"
                testers = "hung.tran@nunchuk.io"
                groups = "testers"
            }
            dimension "env"
            resValue "string", "app_name", "Development"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/versions/9/module-info.class'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinStdlibVersion"

    implementation project(':nunchuk-arch')
    implementation project(':nunchuk-auth')
    implementation project(':nunchuk-core')
    implementation project(':nunchuk-contact')
    implementation project(':nunchuk-database')
    implementation project(':nunchuk-main')
    implementation project(':nunchuk-domain')
    implementation project(':nunchuk-network')
    implementation project(':nunchuk-signer')
    implementation project(':nunchuk-signer-airgap')
    implementation project(':nunchuk-signer-software')
    implementation project(':nunchuk-signer-core')
    implementation project(':nunchuk-wallet')
    implementation project(':nunchuk-wallet-personal')
    implementation project(':nunchuk-wallet-shared')
    implementation project(':nunchuk-widget')
    implementation project(':nunchuk-transaction')
    implementation project(':nunchuk-messages')
    implementation project(':nunchuk-utils')
    implementation project(':nunchuk-settings')
    implementation project(':nunchuk-notifications')

    implementation nunchukDeps.nativeSdk
    implementation matrixDeps.matrixSdk
    implementation workMangerDeps.values()

    implementation loggingDeps.timber

    implementation platform(playServices.firebaseBom)
    implementation playServices.firebaseCrashlytics
    implementation playServices.firebaseNdkCrashlytics
    implementation playServices.firebaseAnalytics
    implementation playServices.firebasePerf

    implementation lifecycleDeps.values()

    kapt hiltDeps.processor
    implementation hiltDeps.hilt

    implementation networkDeps.values()
    implementation composeDeps.values()

    implementation androidxDeps.values()
    implementation googleDeps.values()

    // Kotlin
    implementation navigationDeps.values()
    implementation coroutineDeps.values()

    implementation 'com.google.android.gms:play-services-base:18.0.1'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'

    implementation triggerRestartDeps.values()

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}
