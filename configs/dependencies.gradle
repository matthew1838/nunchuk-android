ext {
    // Library Version
    androidxVersion = '1.0.0'
    mutlidexVersion = '2.0.1'
    constraintLayoutVersion = '2.1.4'
    playServiceVersion = '16.0.0'
    daggerVersion = '2.40.5'
    powerMockVersion = '1.6.6'
    mockitoVersion = '2.8.9'
    robolectricVersion = '4.0.2'
    espressoVersion = '3.1.0'
    dexMakerVersion = '1.4'
    gsonVersion = '2.8.2'
    androidTestVersion = '1.1.0'

    roomVersion = '2.4.3'
    archLifecycleVersion = '1.1.1'
    workMangerVersion = '2.0.0'
    lifecycleVersion = '2.5.0'

    retrofitVersion = '2.9.0'
    okhttpVersion = '4.7.2'
    coroutinesVersion = '1.6.2'

    // Plugins versions
    gradleVersion = '7.3.1'
    googleServiceVersion = '4.3.10'
    kotlinGradlePluginVersion = '1.7.10'
    kotlinStdlibVersion = '1.7.10'
    pagingVersion = "3.1.1"

    hiltVersion = "2.42"

    // Nunchuk dep versions
    nativeSdkVersion = '1.1.54'

    // Matrix
    matrixSdkVersion = '1.4.27'
    // https://user-images.githubusercontent.com/9841565/164481595-53564bf0-416c-469c-b251-71b0e59074c8.png

    // trigger restart
    triggerRestartVersion = '2.1.2'

    navVersion = "2.5.0"

    compose = "1.2.1"

    MAJOR_VERSION = 1
    MINOR_VERSION = 9
    PATCH_VERSION = 21
    TASK_LABEL = "UAT"

    VERSION_CODE = 191

    androidConfig = [
            applicationId    : "com.nunchuk.android",
            compileSdkVersion: 32,
            targetSdkVersion : 31,
            minSdkVersion    : 21,
            buildToolsVersion: "31.0.0",
            versionName      : "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}",
            taskLabel        : ".${TASK_LABEL}",
            versionCode      : VERSION_CODE
    ]

    pluginsDeps = [
            gradleAndroid       : "com.android.tools.build:gradle:${gradleVersion}",
            googleServices      : "com.google.gms:google-services:${googleServiceVersion}",
            playServicesAds     : "com.google.android.gms:play-services-ads:${playServiceVersion}",
            crashlytics         : "com.google.firebase:firebase-crashlytics-gradle:2.9.1",
            kotlinAndroidRuntime: "org.jetbrains.kotlin:kotlin-android-extensions-runtime:1.4.30",
            appdistribution     : "com.google.firebase:firebase-appdistribution-gradle:2.1.3",
            hilt                : "com.google.dagger:hilt-android-gradle-plugin:${hiltVersion}",
            safeArgs            : "androidx.navigation:navigation-safe-args-gradle-plugin:${navVersion}",
    ]

    kotlinDeps = [
            plugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinGradlePluginVersion}",
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib:${kotlinStdlibVersion}"
    ]

    coroutineDeps = [
            coroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutinesVersion}",
            coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutinesVersion}"
    ]

    androidxDeps = [
            design           : "com.google.android.material:material:1.3.0",
            recyclerView     : "androidx.recyclerview:recyclerview:1.2.1",
            cardView         : "androidx.cardview:cardview:${androidxVersion}",
            appCompat        : "androidx.appcompat:appcompat:1.5.0",
            supportAnnotation: "androidx.annotation:annotation:${androidxVersion}",
            coreUtils        : "androidx.legacy:legacy-support-core-utils:${androidxVersion}",
            constraintLayout : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            multidex         : "androidx.multidex:multidex:${mutlidexVersion}",
    ]

    navigationDeps = [
            navigationUi      : "androidx.navigation:navigation-ui-ktx:$navVersion",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:$navVersion"
    ]

    espressoDeps = [
            runner     : "androidx.test:runner:${androidTestVersion}",
            rules      : "androidx.test:rules:${androidTestVersion}",
            core       : "androidx.test.espresso:espresso-core:${espressoVersion}",
            intents    : "androidx.test.espresso:espresso-intents:${espressoVersion}",
            contrib    : "androidx.test.espresso:espresso-contrib:${espressoVersion}",
            uiautomator: "androidx.test.uiautomator:uiautomator:2.2.0"
    ]

    playServices = [
            firebaseBom           : "com.google.firebase:firebase-bom:30.0.1",
            firebaseAnalytics     : "com.google.firebase:firebase-analytics-ktx",
            firebaseCrashlytics   : "com.google.firebase:firebase-crashlytics-ktx",
            firebaseNdkCrashlytics: "com.google.firebase:firebase-crashlytics-ndk",
            firebasePerf          : 'com.google.firebase:firebase-perf-ktx'
    ]

    daggerDeps = [
            compiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            processor    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            support      : "com.google.dagger:dagger-android-support:${daggerVersion}",
            dagger       : "com.google.dagger:dagger:${daggerVersion}",
            jbAnnotations: "org.jetbrains:annotations:15.0",
    ]

    hiltDeps = [
            processor: "com.google.dagger:hilt-compiler:${hiltVersion}",
            hilt     : "com.google.dagger:hilt-android:${hiltVersion}",
    ]

    imageLoaderDeps = [
            glide    : "com.github.bumptech.glide:glide:4.12.0",
            processor: "com.github.bumptech.glide:compiler:4.12.0"
    ]

    powerMockDeps = [
            junit4    : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            ruleAgent : "org.powermock:powermock-module-junit4-rule-agent:${powerMockVersion}",
            apiMockito: "org.powermock:powermock-api-mockito:${powerMockVersion}",
            xstream   : "org.powermock:powermock-classloading-xstream:${powerMockVersion}",
    ]

    leakDetectionDeps = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android:2.7"
    ]

    networkDeps = [
            retrofit     : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            okhttp3      : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            gsonConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            logging      : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}",
    ]

    robolectricDeps = [
            robolectric    : "org.robolectric:robolectric:${robolectricVersion}",
            shadowsSupport : "org.robolectric:shadows-supportv4:${robolectricVersion}",
            shadowsMultidex: "org.robolectric:shadows-multidex:${robolectricVersion}",
    ]

    dexMaker = [
            dexmaker  : "com.crittercism.dexmaker:dexmaker:${dexMakerVersion}",
            dexmakerDx: "com.crittercism.dexmaker:dexmaker-dx:${dexMakerVersion}",
            mockito   : "com.crittercism.dexmaker:dexmaker-mockito:${dexMakerVersion}",
    ]

    googleDeps = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
    ]

    dataStoreDeps = [
            dataStore: "androidx.datastore:datastore-preferences:1.0.0"
    ]

    roomArch = [
            roomKtx     : "androidx.room:room-ktx:${roomVersion}",
            room        : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler: "androidx.room:room-compiler:${roomVersion}",
            roomTest    : "androidx.room:room-testing:${roomVersion}"
    ]

    workMangerDeps = [
            workManger   : "androidx.work:work-runtime:${workMangerVersion}",
            workMangerKtx: "androidx.work:work-runtime-ktx:${workMangerVersion}",
            testing      : "androidx.work:work-testing:${workMangerVersion}"
    ]

    zxingDeps = [
            zxingCore   : "com.google.zxing:core:3.4.1",
            zxingAndroid: "com.journeyapps:zxing-android-embedded:4.3.0",
    ]

    lifecycleDeps = [
            lifeCycleProcess     : "androidx.lifecycle:lifecycle-process:${lifecycleVersion}",
            lifeCycleRuntime     : "androidx.lifecycle:lifecycle-runtime-ktx:${lifecycleVersion}",
            lifecycleLivedata    : "androidx.lifecycle:lifecycle-livedata:${lifecycleVersion}",
            lifecycleLivedataKtx : "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycleVersion}",
            lifecycleViewModelKtx: "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}"
    ]

    otherTestDeps = [
            junit      : "junit:junit:4.12",
            spoonClient: "com.squareup.spoon:spoon-client:1.6.4",
    ]

    kotlinSupportTestDeps = [
            mockitoInline       : "org.mockito:mockito-inline:${mockitoVersion}",
            mockitoCore2        : "org.mockito:mockito-core:${mockitoVersion}",
            powermockApiMockito2: "org.powermock:powermock-api-mockito2:1.7.0RC2",
            powermockModule     : "org.powermock:powermock-module-junit4:1.7.0",
            powermockCore       : "org.powermock:powermock-core:1.7.0",
            powermockModuleRule : "org.powermock:powermock-module-junit4-rule:1.7.0",
    ]

    nunchukDeps = [
            nativeSdk: "io.nunchuk.android:nativesdk-arm64_v8a:${nativeSdkVersion}"
    ]

    matrixDeps = [
            matrixSdk: "org.matrix.android:matrix-android-sdk2:${matrixSdkVersion}"
    ]

    loggingDeps = [
            timber: 'com.jakewharton.timber:timber:5.0.1'
    ]

    pagingDeps = [
            runtime   : "androidx.paging:paging-runtime:$pagingVersion",
            runtimeKtx: "androidx.paging:paging-runtime-ktx:$pagingVersion"
    ]

    triggerRestartDeps = [
            core: "com.jakewharton:process-phoenix:$triggerRestartVersion"
    ]

    composeDeps = [
            'composeUi'        : "androidx.compose.ui:ui:$compose",
            'composeUiTool'    : "androidx.compose.ui:ui-tooling:$compose",
            'composeFoundation': "androidx.compose.foundation:foundation:$compose",
            'composeMaterial'  : "androidx.compose.material:material:$compose",
            'composeActivity'  : "androidx.activity:activity-compose:1.5.1",
            'composeViewModel' : "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1",
    ]
}
